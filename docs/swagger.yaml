basePath: /api-auth
definitions:
  handler.CurrentUserResponse:
    properties:
      userGUID:
        type: string
    type: object
  handler.LogoutResponse:
    properties:
      message:
        description: |-
          Сообщение о результате операции
          example: выполнен выход из аккаунта
        type: string
    type: object
  handler.RefreshTokenRequest:
    properties:
      refreshToken:
        description: |-
          Refresh токен
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  handler.TokensPair:
    properties:
      accessToken:
        description: |-
          Access токен (JWT)
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refreshToken:
        description: |-
          Refresh токен (для получения новой пары)
          example: vcSi0369y1I62wOpxZFpgZ...
        type: string
    type: object
host: localhost:8090
info:
  contact: {}
  description: REST API для аутентификации пользователей. Тестовое задание на позицию
    Junior Backend Developer
  title: Auth API Service
  version: "1.0"
paths:
  /get-tokens:
    get:
      consumes:
      - application/json
      description: Создает новую пару JWT-токенов и сохраняет refresh-токен в БД
      parameters:
      - description: GUID (UUID) пользователя
        in: query
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TokensPair'
        "400":
          description: Неверный запрос
          schema:
            type: string
        "500":
          description: Ошибка генерации или сохранения токенов
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Генерация токенов
      tags:
      - Authentication
  /logout:
    post:
      consumes:
      - application/json
      description: Инвалидирует refresh-токен и завершает сеанс пользователя
      parameters:
      - default: Bearer <access_token>
        description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LogoutResponse'
        "400":
          description: Ошибка при выполнении выхода
          schema:
            type: string
        "401":
          description: Пользователь не авторизован
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Выход из аккаунта
      tags:
      - Authentication
  /me:
    get:
      description: Извлекает GUID (UUID) пользователя из JWT-токена
      parameters:
      - default: Bearer <access_token>
        description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CurrentUserResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение GUID (UUID) пользователя
      tags:
      - Authentication
  /refresh-token:
    post:
      consumes:
      - application/json
      description: Обновляет пару JWT-токенов по refresh-токену с проверкой IP и User-Agent
      parameters:
      - default: Bearer <access_token>
        description: Access токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Refresh токен в теле запроса
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TokensPair'
        "400":
          description: Неверный формат данных
          schema:
            type: string
        "401":
          description: Недействительный токен
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновление токенов
      tags:
      - Authentication
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
